//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.DocumentServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
    [System.SerializableAttribute()]
    public partial class DocumentServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ExceptionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ExceptionData {
            get {
                return this.ExceptionDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionDataField, value) != true)) {
                    this.ExceptionDataField = value;
                    this.RaisePropertyChanged("ExceptionData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemKey", Namespace="http://schemas.datacontract.org/2004/07/DykBits.Crm.Data")]
    [System.SerializableAttribute()]
    public partial class ItemKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentNumberInfo", Namespace="http://schemas.datacontract.org/2004/07/DykBits.Crm.Data")]
    [System.SerializableAttribute()]
    public partial class DocumentNumberInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormattedNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileAs {
            get {
                return this.FileAsField;
            }
            set {
                if ((object.ReferenceEquals(this.FileAsField, value) != true)) {
                    this.FileAsField = value;
                    this.RaisePropertyChanged("FileAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormattedNumber {
            get {
                return this.FormattedNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FormattedNumberField, value) != true)) {
                    this.FormattedNumberField = value;
                    this.RaisePropertyChanged("FormattedNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.dykbits.net/2014/crm/documentservice", ConfigurationName="DocumentServices.IDocumentService")]
    public interface IDocumentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/Ping", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/PingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/PingDocumentServ" +
            "iceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        string Ping(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/Ping", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/PingResponse")]
        System.Threading.Tasks.Task<string> PingAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/Browse", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/BrowseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/BrowseDocumentSe" +
            "rviceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        System.IO.Stream Browse(string documentType, System.Xml.Linq.XElement filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/Browse", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/BrowseResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> BrowseAsync(string documentType, System.Xml.Linq.XElement filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetList", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetListDocumentS" +
            "erviceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        System.IO.Stream GetList(string documentType, System.Xml.Linq.XElement filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetList", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetListResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetListAsync(string documentType, System.Xml.Linq.XElement filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocument", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentDocum" +
            "entServiceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        System.IO.Stream GetDocument(DykBits.Crm.DocumentServices.ItemKey key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocument", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetDocumentAsync(DykBits.Crm.DocumentServices.ItemKey key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/DeleteDocument", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/DeleteDocumentRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/DeleteDocumentDo" +
            "cumentServiceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        void DeleteDocument(DykBits.Crm.DocumentServices.ItemKey key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/DeleteDocument", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/DeleteDocumentRe" +
            "sponse")]
        System.Threading.Tasks.Task DeleteDocumentAsync(DykBits.Crm.DocumentServices.ItemKey key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ChangeDocumentSt" +
            "ate", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ChangeDocumentSt" +
            "ateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ChangeDocumentSt" +
            "ateDocumentServiceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        void ChangeDocumentState(DykBits.Crm.DocumentServices.ItemKey key, byte newState, System.Xml.Linq.XElement applicationData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ChangeDocumentSt" +
            "ate", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ChangeDocumentSt" +
            "ateResponse")]
        System.Threading.Tasks.Task ChangeDocumentStateAsync(DykBits.Crm.DocumentServices.ItemKey key, byte newState, System.Xml.Linq.XElement applicationData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/Save", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/SaveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/SaveDocumentServ" +
            "iceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        System.IO.Stream Save(System.IO.Stream documentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/Save", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/SaveResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> SaveAsync(System.IO.Stream documentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentNumbe" +
            "rInfo", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentNumbe" +
            "rInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentNumbe" +
            "rInfoDocumentServiceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        DykBits.Crm.DocumentServices.DocumentNumberInfo GetDocumentNumberInfo(string className, int organizationId, System.DateTime documentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentNumbe" +
            "rInfo", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentNumbe" +
            "rInfoResponse")]
        System.Threading.Tasks.Task<DykBits.Crm.DocumentServices.DocumentNumberInfo> GetDocumentNumberInfoAsync(string className, int organizationId, System.DateTime documentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentMetad" +
            "ata", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentMetad" +
            "ataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentMetad" +
            "ataDocumentServiceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        System.IO.Stream GetDocumentMetadata();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentMetad" +
            "ata", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetDocumentMetad" +
            "ataResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetDocumentMetadataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetCurrentEmploy" +
            "ee", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetCurrentEmploy" +
            "eeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetCurrentEmploy" +
            "eeDocumentServiceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        System.IO.Stream GetCurrentEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetCurrentEmploy" +
            "ee", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/GetCurrentEmploy" +
            "eeResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetCurrentEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteQuery", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteQueryResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteQueryDocu" +
            "mentServiceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        System.IO.Stream ExecuteQuery(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteQuery", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteQueryResp" +
            "onse")]
        System.Threading.Tasks.Task<System.IO.Stream> ExecuteQueryAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteNonQuery", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteNonQueryR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DykBits.Crm.DocumentServices.DocumentServiceFault), Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteNonQueryD" +
            "ocumentServiceFaultFault", Name="DocumentServiceFault", Namespace="http://schemas.datacontract.org/2004/07/DykBits.DataService")]
        int ExecuteNonQuery(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteNonQuery", ReplyAction="http://www.dykbits.net/2014/crm/documentservice/IDocumentService/ExecuteNonQueryR" +
            "esponse")]
        System.Threading.Tasks.Task<int> ExecuteNonQueryAsync(System.IO.Stream stream);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentServiceChannel : DykBits.Crm.DocumentServices.IDocumentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentServiceClient : System.ServiceModel.ClientBase<DykBits.Crm.DocumentServices.IDocumentService>, DykBits.Crm.DocumentServices.IDocumentService {
        
        public DocumentServiceClient() {
        }
        
        public DocumentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Ping(string message) {
            return base.Channel.Ping(message);
        }
        
        public System.Threading.Tasks.Task<string> PingAsync(string message) {
            return base.Channel.PingAsync(message);
        }
        
        public System.IO.Stream Browse(string documentType, System.Xml.Linq.XElement filter) {
            return base.Channel.Browse(documentType, filter);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> BrowseAsync(string documentType, System.Xml.Linq.XElement filter) {
            return base.Channel.BrowseAsync(documentType, filter);
        }
        
        public System.IO.Stream GetList(string documentType, System.Xml.Linq.XElement filter) {
            return base.Channel.GetList(documentType, filter);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetListAsync(string documentType, System.Xml.Linq.XElement filter) {
            return base.Channel.GetListAsync(documentType, filter);
        }
        
        public System.IO.Stream GetDocument(DykBits.Crm.DocumentServices.ItemKey key) {
            return base.Channel.GetDocument(key);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetDocumentAsync(DykBits.Crm.DocumentServices.ItemKey key) {
            return base.Channel.GetDocumentAsync(key);
        }
        
        public void DeleteDocument(DykBits.Crm.DocumentServices.ItemKey key) {
            base.Channel.DeleteDocument(key);
        }
        
        public System.Threading.Tasks.Task DeleteDocumentAsync(DykBits.Crm.DocumentServices.ItemKey key) {
            return base.Channel.DeleteDocumentAsync(key);
        }
        
        public void ChangeDocumentState(DykBits.Crm.DocumentServices.ItemKey key, byte newState, System.Xml.Linq.XElement applicationData) {
            base.Channel.ChangeDocumentState(key, newState, applicationData);
        }
        
        public System.Threading.Tasks.Task ChangeDocumentStateAsync(DykBits.Crm.DocumentServices.ItemKey key, byte newState, System.Xml.Linq.XElement applicationData) {
            return base.Channel.ChangeDocumentStateAsync(key, newState, applicationData);
        }
        
        public System.IO.Stream Save(System.IO.Stream documentData) {
            return base.Channel.Save(documentData);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> SaveAsync(System.IO.Stream documentData) {
            return base.Channel.SaveAsync(documentData);
        }
        
        public DykBits.Crm.DocumentServices.DocumentNumberInfo GetDocumentNumberInfo(string className, int organizationId, System.DateTime documentDate) {
            return base.Channel.GetDocumentNumberInfo(className, organizationId, documentDate);
        }
        
        public System.Threading.Tasks.Task<DykBits.Crm.DocumentServices.DocumentNumberInfo> GetDocumentNumberInfoAsync(string className, int organizationId, System.DateTime documentDate) {
            return base.Channel.GetDocumentNumberInfoAsync(className, organizationId, documentDate);
        }
        
        public System.IO.Stream GetDocumentMetadata() {
            return base.Channel.GetDocumentMetadata();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetDocumentMetadataAsync() {
            return base.Channel.GetDocumentMetadataAsync();
        }
        
        public System.IO.Stream GetCurrentEmployee() {
            return base.Channel.GetCurrentEmployee();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetCurrentEmployeeAsync() {
            return base.Channel.GetCurrentEmployeeAsync();
        }
        
        public System.IO.Stream ExecuteQuery(System.IO.Stream stream) {
            return base.Channel.ExecuteQuery(stream);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> ExecuteQueryAsync(System.IO.Stream stream) {
            return base.Channel.ExecuteQueryAsync(stream);
        }
        
        public int ExecuteNonQuery(System.IO.Stream stream) {
            return base.Channel.ExecuteNonQuery(stream);
        }
        
        public System.Threading.Tasks.Task<int> ExecuteNonQueryAsync(System.IO.Stream stream) {
            return base.Channel.ExecuteNonQueryAsync(stream);
        }
    }
}
