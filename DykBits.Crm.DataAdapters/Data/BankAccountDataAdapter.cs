//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    
    public partial class BankAccountDataAdapter : DataAdapterBase<BankAccountView, BankAccount, BankAccountFilter>
    {
        private bool _initialized1;
        private int _ordinal1Id;
        private int _ordinal1State;
        private int _ordinal1FileAs;
        private int _ordinal1AccountId;
        private int _ordinal1CashAccount;
        private int _ordinal1Bank;
        private int _ordinal1Address;
        private int _ordinal1Account;
        private int _ordinal1SWIFT;
        private int _ordinal1ABA;
        private int _ordinal1BIC;
        private int _ordinal1IBAN;
        private int _ordinal1IntermediaryBank;
        private int _ordinal1IntermediaryAddress;
        private int _ordinal1IntermediaryAccount;
        private int _ordinal1IntermediarySWIFT;
        private int _ordinal1IntermediaryABA;
        private int _ordinal1Comments;
        private int _ordinal1Created;
        private int _ordinal1CreatedBy;
        private int _ordinal1Modified;
        private int _ordinal1ModifiedBy;
        private int _ordinal1RowVersion;
        private void InitializeBindBrowseResultToItem(SqlDataReader reader)
        {
            if (this._initialized1) return;
            this._ordinal1Id = reader.GetOrdinal("Id");
            this._ordinal1State = reader.GetOrdinal("State");
            this._ordinal1FileAs = reader.GetOrdinal("FileAs");
            this._ordinal1AccountId = reader.GetOrdinal("AccountId");
            this._ordinal1CashAccount = reader.GetOrdinal("CashAccount");
            this._ordinal1Bank = reader.GetOrdinal("Bank");
            this._ordinal1Address = reader.GetOrdinal("Address");
            this._ordinal1Account = reader.GetOrdinal("Account");
            this._ordinal1SWIFT = reader.GetOrdinal("SWIFT");
            this._ordinal1ABA = reader.GetOrdinal("ABA");
            this._ordinal1BIC = reader.GetOrdinal("BIC");
            this._ordinal1IBAN = reader.GetOrdinal("IBAN");
            this._ordinal1IntermediaryBank = reader.GetOrdinal("IntermediaryBank");
            this._ordinal1IntermediaryAddress = reader.GetOrdinal("IntermediaryAddress");
            this._ordinal1IntermediaryAccount = reader.GetOrdinal("IntermediaryAccount");
            this._ordinal1IntermediarySWIFT = reader.GetOrdinal("IntermediarySWIFT");
            this._ordinal1IntermediaryABA = reader.GetOrdinal("IntermediaryABA");
            this._ordinal1Comments = reader.GetOrdinal("Comments");
            this._ordinal1Created = reader.GetOrdinal("Created");
            this._ordinal1CreatedBy = reader.GetOrdinal("CreatedBy");
            this._ordinal1Modified = reader.GetOrdinal("Modified");
            this._ordinal1ModifiedBy = reader.GetOrdinal("ModifiedBy");
            this._ordinal1RowVersion = reader.GetOrdinal("RowVersion");
            this._initialized1 = true;
        }
        protected override void BindBrowseResultToItem(BankAccountView item, SqlDataReader reader)
        {
            InitializeBindBrowseResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal1Id);
            item.State = (BankAccountState)reader.GetByte(this._ordinal1State);
            item.FileAs = reader.GetString(this._ordinal1FileAs);
            item.AccountId = reader.GetInt32(this._ordinal1AccountId);
            item.CashAccount = reader.GetBoolean(this._ordinal1CashAccount);
            if(reader.IsDBNull(_ordinal1Bank)) item.Bank = null; else item.Bank = reader.GetString(this._ordinal1Bank);
            if(reader.IsDBNull(_ordinal1Address)) item.Address = null; else item.Address = reader.GetString(this._ordinal1Address);
            if(reader.IsDBNull(_ordinal1Account)) item.Account = null; else item.Account = reader.GetString(this._ordinal1Account);
            if(reader.IsDBNull(_ordinal1SWIFT)) item.SWIFT = null; else item.SWIFT = reader.GetString(this._ordinal1SWIFT);
            if(reader.IsDBNull(_ordinal1ABA)) item.ABA = null; else item.ABA = reader.GetString(this._ordinal1ABA);
            if(reader.IsDBNull(_ordinal1BIC)) item.BIC = null; else item.BIC = reader.GetString(this._ordinal1BIC);
            if(reader.IsDBNull(_ordinal1IBAN)) item.IBAN = null; else item.IBAN = reader.GetString(this._ordinal1IBAN);
            if(reader.IsDBNull(_ordinal1IntermediaryBank)) item.IntermediaryBank = null; else item.IntermediaryBank = reader.GetString(this._ordinal1IntermediaryBank);
            if(reader.IsDBNull(_ordinal1IntermediaryAddress)) item.IntermediaryAddress = null; else item.IntermediaryAddress = reader.GetString(this._ordinal1IntermediaryAddress);
            if(reader.IsDBNull(_ordinal1IntermediaryAccount)) item.IntermediaryAccount = null; else item.IntermediaryAccount = reader.GetString(this._ordinal1IntermediaryAccount);
            if(reader.IsDBNull(_ordinal1IntermediarySWIFT)) item.IntermediarySWIFT = null; else item.IntermediarySWIFT = reader.GetString(this._ordinal1IntermediarySWIFT);
            if(reader.IsDBNull(_ordinal1IntermediaryABA)) item.IntermediaryABA = null; else item.IntermediaryABA = reader.GetString(this._ordinal1IntermediaryABA);
            if(reader.IsDBNull(_ordinal1Comments)) item.Comments = null; else item.Comments = reader.GetString(this._ordinal1Comments);
            item.Created = reader.GetDateTime(this._ordinal1Created);
            item.CreatedBy = reader.GetInt32(this._ordinal1CreatedBy);
            item.Modified = reader.GetDateTime(this._ordinal1Modified);
            item.ModifiedBy = reader.GetInt32(this._ordinal1ModifiedBy);
            item.RowVersion = reader.GetSqlBinary(this._ordinal1RowVersion).Value;
        }
        private bool _initialized2;
        private int _ordinal2Id;
        private int _ordinal2State;
        private int _ordinal2FileAs;
        private int _ordinal2AccountId;
        private int _ordinal2CashAccount;
        private int _ordinal2Bank;
        private int _ordinal2Address;
        private int _ordinal2Account;
        private int _ordinal2SWIFT;
        private int _ordinal2ABA;
        private int _ordinal2BIC;
        private int _ordinal2IBAN;
        private int _ordinal2IntermediaryBank;
        private int _ordinal2IntermediaryAddress;
        private int _ordinal2IntermediaryAccount;
        private int _ordinal2IntermediarySWIFT;
        private int _ordinal2IntermediaryABA;
        private void InitializeBindListResultToItem(SqlDataReader reader)
        {
            if (this._initialized2) return;
            this._ordinal2Id = reader.GetOrdinal("Id");
            this._ordinal2State = reader.GetOrdinal("State");
            this._ordinal2FileAs = reader.GetOrdinal("FileAs");
            this._ordinal2AccountId = reader.GetOrdinal("AccountId");
            this._ordinal2CashAccount = reader.GetOrdinal("CashAccount");
            this._ordinal2Bank = reader.GetOrdinal("Bank");
            this._ordinal2Address = reader.GetOrdinal("Address");
            this._ordinal2Account = reader.GetOrdinal("Account");
            this._ordinal2SWIFT = reader.GetOrdinal("SWIFT");
            this._ordinal2ABA = reader.GetOrdinal("ABA");
            this._ordinal2BIC = reader.GetOrdinal("BIC");
            this._ordinal2IBAN = reader.GetOrdinal("IBAN");
            this._ordinal2IntermediaryBank = reader.GetOrdinal("IntermediaryBank");
            this._ordinal2IntermediaryAddress = reader.GetOrdinal("IntermediaryAddress");
            this._ordinal2IntermediaryAccount = reader.GetOrdinal("IntermediaryAccount");
            this._ordinal2IntermediarySWIFT = reader.GetOrdinal("IntermediarySWIFT");
            this._ordinal2IntermediaryABA = reader.GetOrdinal("IntermediaryABA");
            this._initialized2 = true;
        }
        protected override void BindListResultToItem(BankAccountView item, SqlDataReader reader)
        {
            InitializeBindListResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal2Id);
            item.State = (BankAccountState)reader.GetByte(this._ordinal2State);
            item.FileAs = reader.GetString(this._ordinal2FileAs);
            item.AccountId = reader.GetInt32(this._ordinal2AccountId);
            item.CashAccount = reader.GetBoolean(this._ordinal2CashAccount);
            if(reader.IsDBNull(_ordinal2Bank)) item.Bank = null; else item.Bank = reader.GetString(this._ordinal2Bank);
            if(reader.IsDBNull(_ordinal2Address)) item.Address = null; else item.Address = reader.GetString(this._ordinal2Address);
            if(reader.IsDBNull(_ordinal2Account)) item.Account = null; else item.Account = reader.GetString(this._ordinal2Account);
            if(reader.IsDBNull(_ordinal2SWIFT)) item.SWIFT = null; else item.SWIFT = reader.GetString(this._ordinal2SWIFT);
            if(reader.IsDBNull(_ordinal2ABA)) item.ABA = null; else item.ABA = reader.GetString(this._ordinal2ABA);
            if(reader.IsDBNull(_ordinal2BIC)) item.BIC = null; else item.BIC = reader.GetString(this._ordinal2BIC);
            if(reader.IsDBNull(_ordinal2IBAN)) item.IBAN = null; else item.IBAN = reader.GetString(this._ordinal2IBAN);
            if(reader.IsDBNull(_ordinal2IntermediaryBank)) item.IntermediaryBank = null; else item.IntermediaryBank = reader.GetString(this._ordinal2IntermediaryBank);
            if(reader.IsDBNull(_ordinal2IntermediaryAddress)) item.IntermediaryAddress = null; else item.IntermediaryAddress = reader.GetString(this._ordinal2IntermediaryAddress);
            if(reader.IsDBNull(_ordinal2IntermediaryAccount)) item.IntermediaryAccount = null; else item.IntermediaryAccount = reader.GetString(this._ordinal2IntermediaryAccount);
            if(reader.IsDBNull(_ordinal2IntermediarySWIFT)) item.IntermediarySWIFT = null; else item.IntermediarySWIFT = reader.GetString(this._ordinal2IntermediarySWIFT);
            if(reader.IsDBNull(_ordinal2IntermediaryABA)) item.IntermediaryABA = null; else item.IntermediaryABA = reader.GetString(this._ordinal2IntermediaryABA);
        }
        private bool _initialized0;
        private int _ordinal0Id;
        private int _ordinal0State;
        private int _ordinal0FileAs;
        private int _ordinal0AccountId;
        private int _ordinal0CashAccount;
        private int _ordinal0Bank;
        private int _ordinal0Address;
        private int _ordinal0Account;
        private int _ordinal0SWIFT;
        private int _ordinal0ABA;
        private int _ordinal0BIC;
        private int _ordinal0IBAN;
        private int _ordinal0IntermediaryBank;
        private int _ordinal0IntermediaryAddress;
        private int _ordinal0IntermediaryAccount;
        private int _ordinal0IntermediarySWIFT;
        private int _ordinal0IntermediaryABA;
        private int _ordinal0Comments;
        private int _ordinal0Created;
        private int _ordinal0CreatedBy;
        private int _ordinal0Modified;
        private int _ordinal0ModifiedBy;
        private int _ordinal0RowVersion;
        private void InitializeBindGetItemResultToItem(SqlDataReader reader)
        {
            if (this._initialized0) return;
            this._ordinal0Id = reader.GetOrdinal("Id");
            this._ordinal0State = reader.GetOrdinal("State");
            this._ordinal0FileAs = reader.GetOrdinal("FileAs");
            this._ordinal0AccountId = reader.GetOrdinal("AccountId");
            this._ordinal0CashAccount = reader.GetOrdinal("CashAccount");
            this._ordinal0Bank = reader.GetOrdinal("Bank");
            this._ordinal0Address = reader.GetOrdinal("Address");
            this._ordinal0Account = reader.GetOrdinal("Account");
            this._ordinal0SWIFT = reader.GetOrdinal("SWIFT");
            this._ordinal0ABA = reader.GetOrdinal("ABA");
            this._ordinal0BIC = reader.GetOrdinal("BIC");
            this._ordinal0IBAN = reader.GetOrdinal("IBAN");
            this._ordinal0IntermediaryBank = reader.GetOrdinal("IntermediaryBank");
            this._ordinal0IntermediaryAddress = reader.GetOrdinal("IntermediaryAddress");
            this._ordinal0IntermediaryAccount = reader.GetOrdinal("IntermediaryAccount");
            this._ordinal0IntermediarySWIFT = reader.GetOrdinal("IntermediarySWIFT");
            this._ordinal0IntermediaryABA = reader.GetOrdinal("IntermediaryABA");
            this._ordinal0Comments = reader.GetOrdinal("Comments");
            this._ordinal0Created = reader.GetOrdinal("Created");
            this._ordinal0CreatedBy = reader.GetOrdinal("CreatedBy");
            this._ordinal0Modified = reader.GetOrdinal("Modified");
            this._ordinal0ModifiedBy = reader.GetOrdinal("ModifiedBy");
            this._ordinal0RowVersion = reader.GetOrdinal("RowVersion");
            this._initialized0 = true;
        }
        protected override void BindGetItemResultToItem(BankAccount item, SqlDataReader reader)
        {
            InitializeBindGetItemResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal0Id);
            item.State = (BankAccountState)reader.GetByte(this._ordinal0State);
            item.FileAs = reader.GetString(this._ordinal0FileAs);
            item.AccountId = reader.GetInt32(this._ordinal0AccountId);
            item.CashAccount = reader.GetBoolean(this._ordinal0CashAccount);
            if(reader.IsDBNull(_ordinal0Bank)) item.Bank = null; else item.Bank = reader.GetString(this._ordinal0Bank);
            if(reader.IsDBNull(_ordinal0Address)) item.Address = null; else item.Address = reader.GetString(this._ordinal0Address);
            if(reader.IsDBNull(_ordinal0Account)) item.Account = null; else item.Account = reader.GetString(this._ordinal0Account);
            if(reader.IsDBNull(_ordinal0SWIFT)) item.SWIFT = null; else item.SWIFT = reader.GetString(this._ordinal0SWIFT);
            if(reader.IsDBNull(_ordinal0ABA)) item.ABA = null; else item.ABA = reader.GetString(this._ordinal0ABA);
            if(reader.IsDBNull(_ordinal0BIC)) item.BIC = null; else item.BIC = reader.GetString(this._ordinal0BIC);
            if(reader.IsDBNull(_ordinal0IBAN)) item.IBAN = null; else item.IBAN = reader.GetString(this._ordinal0IBAN);
            if(reader.IsDBNull(_ordinal0IntermediaryBank)) item.IntermediaryBank = null; else item.IntermediaryBank = reader.GetString(this._ordinal0IntermediaryBank);
            if(reader.IsDBNull(_ordinal0IntermediaryAddress)) item.IntermediaryAddress = null; else item.IntermediaryAddress = reader.GetString(this._ordinal0IntermediaryAddress);
            if(reader.IsDBNull(_ordinal0IntermediaryAccount)) item.IntermediaryAccount = null; else item.IntermediaryAccount = reader.GetString(this._ordinal0IntermediaryAccount);
            if(reader.IsDBNull(_ordinal0IntermediarySWIFT)) item.IntermediarySWIFT = null; else item.IntermediarySWIFT = reader.GetString(this._ordinal0IntermediarySWIFT);
            if(reader.IsDBNull(_ordinal0IntermediaryABA)) item.IntermediaryABA = null; else item.IntermediaryABA = reader.GetString(this._ordinal0IntermediaryABA);
            if(reader.IsDBNull(_ordinal0Comments)) item.Comments = null; else item.Comments = reader.GetString(this._ordinal0Comments);
            item.Created = reader.GetDateTime(this._ordinal0Created);
            item.CreatedBy = reader.GetInt32(this._ordinal0CreatedBy);
            item.Modified = reader.GetDateTime(this._ordinal0Modified);
            item.ModifiedBy = reader.GetInt32(this._ordinal0ModifiedBy);
            item.RowVersion = reader.GetSqlBinary(this._ordinal0RowVersion).Value;
        }
        protected override void BindCreateCommand(SqlCommand command, BankAccount item)
        {
            command.Parameters["@FileAs"].Value = DbValueConverter.Convert(item.FileAs);
            command.Parameters["@AccountId"].Value = item.AccountId;
            command.Parameters["@CashAccount"].Value = item.CashAccount;
            command.Parameters["@Bank"].Value = DbValueConverter.Convert(item.Bank);
            command.Parameters["@Address"].Value = DbValueConverter.Convert(item.Address);
            command.Parameters["@Account"].Value = DbValueConverter.Convert(item.Account);
            command.Parameters["@SWIFT"].Value = DbValueConverter.Convert(item.SWIFT);
            command.Parameters["@ABA"].Value = DbValueConverter.Convert(item.ABA);
            command.Parameters["@BIC"].Value = DbValueConverter.Convert(item.BIC);
            command.Parameters["@IBAN"].Value = DbValueConverter.Convert(item.IBAN);
            command.Parameters["@IntermediaryBank"].Value = DbValueConverter.Convert(item.IntermediaryBank);
            command.Parameters["@IntermediaryAddress"].Value = DbValueConverter.Convert(item.IntermediaryAddress);
            command.Parameters["@IntermediaryAccount"].Value = DbValueConverter.Convert(item.IntermediaryAccount);
            command.Parameters["@IntermediarySWIFT"].Value = DbValueConverter.Convert(item.IntermediarySWIFT);
            command.Parameters["@IntermediaryABA"].Value = DbValueConverter.Convert(item.IntermediaryABA);
            command.Parameters["@Comments"].Value = DbValueConverter.Convert(item.Comments);
        }
        protected override void BindUpdateCommand(SqlCommand command, BankAccount item)
        {
            command.Parameters["@Id"].Value = item.Id;
            command.Parameters["@FileAs"].Value = DbValueConverter.Convert(item.FileAs);
            command.Parameters["@AccountId"].Value = item.AccountId;
            command.Parameters["@CashAccount"].Value = item.CashAccount;
            command.Parameters["@Bank"].Value = DbValueConverter.Convert(item.Bank);
            command.Parameters["@Address"].Value = DbValueConverter.Convert(item.Address);
            command.Parameters["@Account"].Value = DbValueConverter.Convert(item.Account);
            command.Parameters["@SWIFT"].Value = DbValueConverter.Convert(item.SWIFT);
            command.Parameters["@ABA"].Value = DbValueConverter.Convert(item.ABA);
            command.Parameters["@BIC"].Value = DbValueConverter.Convert(item.BIC);
            command.Parameters["@IBAN"].Value = DbValueConverter.Convert(item.IBAN);
            command.Parameters["@IntermediaryBank"].Value = DbValueConverter.Convert(item.IntermediaryBank);
            command.Parameters["@IntermediaryAddress"].Value = DbValueConverter.Convert(item.IntermediaryAddress);
            command.Parameters["@IntermediaryAccount"].Value = DbValueConverter.Convert(item.IntermediaryAccount);
            command.Parameters["@IntermediarySWIFT"].Value = DbValueConverter.Convert(item.IntermediarySWIFT);
            command.Parameters["@IntermediaryABA"].Value = DbValueConverter.Convert(item.IntermediaryABA);
            command.Parameters["@Comments"].Value = DbValueConverter.Convert(item.Comments);
            command.Parameters["@RowVersion"].Value = DbValueConverter.Convert(item.RowVersion);
        }
    }
}
