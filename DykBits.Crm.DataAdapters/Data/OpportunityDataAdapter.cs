//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    
    public partial class OpportunityDataAdapter : XmlDataAdapterBase<OpportunityView, Opportunity, OpportunityFilter>
    {
        private bool _initialized1;
        private int _ordinal1Id;
        private int _ordinal1State;
        private int _ordinal1FileAs;
        private int _ordinal1OrganizationId;
        private int _ordinal1AssignedToEmployeeId;
        private int _ordinal1AccountId;
        private int _ordinal1OpportunityTypeId;
        private int _ordinal1LeadSourceId;
        private int _ordinal1ProjectTypeId;
        private int _ordinal1ReasonId;
        private int _ordinal1AmountOfGuests;
        private int _ordinal1Value;
        private int _ordinal1DateClosed;
        private int _ordinal1EventDate;
        private int _ordinal1Probability;
        private int _ordinal1Comments;
        private int _ordinal1Created;
        private int _ordinal1CreatedBy;
        private int _ordinal1Modified;
        private int _ordinal1ModifiedBy;
        private int _ordinal1RowVersion;
        private void InitializeBindBrowseResultToItem(SqlDataReader reader)
        {
            if (this._initialized1) return;
            this._ordinal1Id = reader.GetOrdinal("Id");
            this._ordinal1State = reader.GetOrdinal("State");
            this._ordinal1FileAs = reader.GetOrdinal("FileAs");
            this._ordinal1OrganizationId = reader.GetOrdinal("OrganizationId");
            this._ordinal1AssignedToEmployeeId = reader.GetOrdinal("AssignedToEmployeeId");
            this._ordinal1AccountId = reader.GetOrdinal("AccountId");
            this._ordinal1OpportunityTypeId = reader.GetOrdinal("OpportunityTypeId");
            this._ordinal1LeadSourceId = reader.GetOrdinal("LeadSourceId");
            this._ordinal1ProjectTypeId = reader.GetOrdinal("ProjectTypeId");
            this._ordinal1ReasonId = reader.GetOrdinal("ReasonId");
            this._ordinal1AmountOfGuests = reader.GetOrdinal("AmountOfGuests");
            this._ordinal1Value = reader.GetOrdinal("Value");
            this._ordinal1DateClosed = reader.GetOrdinal("DateClosed");
            this._ordinal1EventDate = reader.GetOrdinal("EventDate");
            this._ordinal1Probability = reader.GetOrdinal("Probability");
            this._ordinal1Comments = reader.GetOrdinal("Comments");
            this._ordinal1Created = reader.GetOrdinal("Created");
            this._ordinal1CreatedBy = reader.GetOrdinal("CreatedBy");
            this._ordinal1Modified = reader.GetOrdinal("Modified");
            this._ordinal1ModifiedBy = reader.GetOrdinal("ModifiedBy");
            this._ordinal1RowVersion = reader.GetOrdinal("RowVersion");
            this._initialized1 = true;
        }
        protected override void BindBrowseResultToItem(OpportunityView item, SqlDataReader reader)
        {
            InitializeBindBrowseResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal1Id);
            item.State = (OpportunityState)reader.GetByte(this._ordinal1State);
            item.FileAs = reader.GetString(this._ordinal1FileAs);
            item.OrganizationId = reader.GetInt32(this._ordinal1OrganizationId);
            item.AssignedToEmployeeId = reader.GetInt32(this._ordinal1AssignedToEmployeeId);
            item.AccountId = reader.GetInt32(this._ordinal1AccountId);
            item.OpportunityTypeId = reader.GetInt32(this._ordinal1OpportunityTypeId);
            item.LeadSourceId = reader.GetInt32(this._ordinal1LeadSourceId);
            item.ProjectTypeId = reader.GetInt32(this._ordinal1ProjectTypeId);
            item.ReasonId = reader.GetInt32(this._ordinal1ReasonId);
            if(reader.IsDBNull(_ordinal1AmountOfGuests)) item.AmountOfGuests = null; else item.AmountOfGuests = reader.GetInt32(this._ordinal1AmountOfGuests);
            item.Value = reader.GetDecimal(this._ordinal1Value);
            item.DateClosed = reader.GetDateTime(this._ordinal1DateClosed);
            item.EventDate = reader.GetDateTime(this._ordinal1EventDate);
            item.Probability = reader.GetDecimal(this._ordinal1Probability);
            if(reader.IsDBNull(_ordinal1Comments)) item.Comments = null; else item.Comments = reader.GetString(this._ordinal1Comments);
            item.Created = reader.GetDateTime(this._ordinal1Created);
            item.CreatedBy = reader.GetInt32(this._ordinal1CreatedBy);
            item.Modified = reader.GetDateTime(this._ordinal1Modified);
            item.ModifiedBy = reader.GetInt32(this._ordinal1ModifiedBy);
            item.RowVersion = reader.GetSqlBinary(this._ordinal1RowVersion).Value;
        }
        private bool _initialized2;
        private int _ordinal2Id;
        private int _ordinal2State;
        private int _ordinal2FileAs;
        private int _ordinal2OrganizationId;
        private int _ordinal2AssignedToEmployeeId;
        private int _ordinal2AccountId;
        private int _ordinal2OpportunityTypeId;
        private int _ordinal2LeadSourceId;
        private int _ordinal2ProjectTypeId;
        private int _ordinal2ReasonId;
        private int _ordinal2AmountOfGuests;
        private int _ordinal2Value;
        private int _ordinal2DateClosed;
        private int _ordinal2EventDate;
        private int _ordinal2Probability;
        private void InitializeBindListResultToItem(SqlDataReader reader)
        {
            if (this._initialized2) return;
            this._ordinal2Id = reader.GetOrdinal("Id");
            this._ordinal2State = reader.GetOrdinal("State");
            this._ordinal2FileAs = reader.GetOrdinal("FileAs");
            this._ordinal2OrganizationId = reader.GetOrdinal("OrganizationId");
            this._ordinal2AssignedToEmployeeId = reader.GetOrdinal("AssignedToEmployeeId");
            this._ordinal2AccountId = reader.GetOrdinal("AccountId");
            this._ordinal2OpportunityTypeId = reader.GetOrdinal("OpportunityTypeId");
            this._ordinal2LeadSourceId = reader.GetOrdinal("LeadSourceId");
            this._ordinal2ProjectTypeId = reader.GetOrdinal("ProjectTypeId");
            this._ordinal2ReasonId = reader.GetOrdinal("ReasonId");
            this._ordinal2AmountOfGuests = reader.GetOrdinal("AmountOfGuests");
            this._ordinal2Value = reader.GetOrdinal("Value");
            this._ordinal2DateClosed = reader.GetOrdinal("DateClosed");
            this._ordinal2EventDate = reader.GetOrdinal("EventDate");
            this._ordinal2Probability = reader.GetOrdinal("Probability");
            this._initialized2 = true;
        }
        protected override void BindListResultToItem(OpportunityView item, SqlDataReader reader)
        {
            InitializeBindListResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal2Id);
            item.State = (OpportunityState)reader.GetByte(this._ordinal2State);
            item.FileAs = reader.GetString(this._ordinal2FileAs);
            item.OrganizationId = reader.GetInt32(this._ordinal2OrganizationId);
            item.AssignedToEmployeeId = reader.GetInt32(this._ordinal2AssignedToEmployeeId);
            item.AccountId = reader.GetInt32(this._ordinal2AccountId);
            item.OpportunityTypeId = reader.GetInt32(this._ordinal2OpportunityTypeId);
            item.LeadSourceId = reader.GetInt32(this._ordinal2LeadSourceId);
            item.ProjectTypeId = reader.GetInt32(this._ordinal2ProjectTypeId);
            item.ReasonId = reader.GetInt32(this._ordinal2ReasonId);
            if(reader.IsDBNull(_ordinal2AmountOfGuests)) item.AmountOfGuests = null; else item.AmountOfGuests = reader.GetInt32(this._ordinal2AmountOfGuests);
            item.Value = reader.GetDecimal(this._ordinal2Value);
            item.DateClosed = reader.GetDateTime(this._ordinal2DateClosed);
            item.EventDate = reader.GetDateTime(this._ordinal2EventDate);
            item.Probability = reader.GetDecimal(this._ordinal2Probability);
        }
    }
}
