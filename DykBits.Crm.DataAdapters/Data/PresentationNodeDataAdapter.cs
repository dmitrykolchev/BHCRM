//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    
    public partial class PresentationNodeDataAdapter : XmlDataAdapterBase<PresentationNodeView, PresentationNode, PresentationNodeFilter>
    {
        private bool _initialized1;
        private int _ordinal1Id;
        private int _ordinal1State;
        private int _ordinal1FileAs;
        private int _ordinal1Key;
        private int _ordinal1DefaultViewId;
        private int _ordinal1ViewControlTypeName;
        private int _ordinal1OrdinalPosition;
        private int _ordinal1Parameter;
        private int _ordinal1ParentId;
        private int _ordinal1DocumentTypeId;
        private int _ordinal1SmallImageData;
        private int _ordinal1LargeImageData;
        private int _ordinal1NodeType;
        private int _ordinal1Comments;
        private int _ordinal1Created;
        private int _ordinal1CreatedBy;
        private int _ordinal1Modified;
        private int _ordinal1ModifiedBy;
        private int _ordinal1RowVersion;
        private void InitializeBindBrowseResultToItem(SqlDataReader reader)
        {
            if (this._initialized1) return;
            this._ordinal1Id = reader.GetOrdinal("Id");
            this._ordinal1State = reader.GetOrdinal("State");
            this._ordinal1FileAs = reader.GetOrdinal("FileAs");
            this._ordinal1Key = reader.GetOrdinal("Key");
            this._ordinal1DefaultViewId = reader.GetOrdinal("DefaultViewId");
            this._ordinal1ViewControlTypeName = reader.GetOrdinal("ViewControlTypeName");
            this._ordinal1OrdinalPosition = reader.GetOrdinal("OrdinalPosition");
            this._ordinal1Parameter = reader.GetOrdinal("Parameter");
            this._ordinal1ParentId = reader.GetOrdinal("ParentId");
            this._ordinal1DocumentTypeId = reader.GetOrdinal("DocumentTypeId");
            this._ordinal1SmallImageData = reader.GetOrdinal("SmallImageData");
            this._ordinal1LargeImageData = reader.GetOrdinal("LargeImageData");
            this._ordinal1NodeType = reader.GetOrdinal("NodeType");
            this._ordinal1Comments = reader.GetOrdinal("Comments");
            this._ordinal1Created = reader.GetOrdinal("Created");
            this._ordinal1CreatedBy = reader.GetOrdinal("CreatedBy");
            this._ordinal1Modified = reader.GetOrdinal("Modified");
            this._ordinal1ModifiedBy = reader.GetOrdinal("ModifiedBy");
            this._ordinal1RowVersion = reader.GetOrdinal("RowVersion");
            this._initialized1 = true;
        }
        protected override void BindBrowseResultToItem(PresentationNodeView item, SqlDataReader reader)
        {
            InitializeBindBrowseResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal1Id);
            item.State = (PresentationNodeState)reader.GetByte(this._ordinal1State);
            item.FileAs = reader.GetString(this._ordinal1FileAs);
            item.Key = reader.GetString(this._ordinal1Key);
            if(reader.IsDBNull(_ordinal1DefaultViewId)) item.DefaultViewId = null; else item.DefaultViewId = reader.GetInt32(this._ordinal1DefaultViewId);
            if(reader.IsDBNull(_ordinal1ViewControlTypeName)) item.ViewControlTypeName = null; else item.ViewControlTypeName = reader.GetString(this._ordinal1ViewControlTypeName);
            item.OrdinalPosition = reader.GetInt32(this._ordinal1OrdinalPosition);
            if(reader.IsDBNull(_ordinal1Parameter)) item.Parameter = null; else item.Parameter = reader.GetString(this._ordinal1Parameter);
            if(reader.IsDBNull(_ordinal1ParentId)) item.ParentId = null; else item.ParentId = reader.GetInt32(this._ordinal1ParentId);
            if(reader.IsDBNull(_ordinal1DocumentTypeId)) item.DocumentTypeId = null; else item.DocumentTypeId = reader.GetInt32(this._ordinal1DocumentTypeId);
            if(reader.IsDBNull(_ordinal1SmallImageData)) item.SmallImageData = null; else item.SmallImageData = reader.GetSqlBinary(this._ordinal1SmallImageData).Value;
            if(reader.IsDBNull(_ordinal1LargeImageData)) item.LargeImageData = null; else item.LargeImageData = reader.GetSqlBinary(this._ordinal1LargeImageData).Value;
            item.NodeType = reader.GetInt32(this._ordinal1NodeType);
            if(reader.IsDBNull(_ordinal1Comments)) item.Comments = null; else item.Comments = reader.GetString(this._ordinal1Comments);
            item.Created = reader.GetDateTime(this._ordinal1Created);
            item.CreatedBy = reader.GetInt32(this._ordinal1CreatedBy);
            item.Modified = reader.GetDateTime(this._ordinal1Modified);
            item.ModifiedBy = reader.GetInt32(this._ordinal1ModifiedBy);
            item.RowVersion = reader.GetSqlBinary(this._ordinal1RowVersion).Value;
        }
        private bool _initialized2;
        private int _ordinal2Id;
        private int _ordinal2State;
        private int _ordinal2FileAs;
        private int _ordinal2Key;
        private int _ordinal2DefaultViewId;
        private int _ordinal2ViewControlTypeName;
        private int _ordinal2OrdinalPosition;
        private int _ordinal2Parameter;
        private int _ordinal2ParentId;
        private int _ordinal2DocumentTypeId;
        private int _ordinal2SmallImageData;
        private int _ordinal2LargeImageData;
        private int _ordinal2NodeType;
        private void InitializeBindListResultToItem(SqlDataReader reader)
        {
            if (this._initialized2) return;
            this._ordinal2Id = reader.GetOrdinal("Id");
            this._ordinal2State = reader.GetOrdinal("State");
            this._ordinal2FileAs = reader.GetOrdinal("FileAs");
            this._ordinal2Key = reader.GetOrdinal("Key");
            this._ordinal2DefaultViewId = reader.GetOrdinal("DefaultViewId");
            this._ordinal2ViewControlTypeName = reader.GetOrdinal("ViewControlTypeName");
            this._ordinal2OrdinalPosition = reader.GetOrdinal("OrdinalPosition");
            this._ordinal2Parameter = reader.GetOrdinal("Parameter");
            this._ordinal2ParentId = reader.GetOrdinal("ParentId");
            this._ordinal2DocumentTypeId = reader.GetOrdinal("DocumentTypeId");
            this._ordinal2SmallImageData = reader.GetOrdinal("SmallImageData");
            this._ordinal2LargeImageData = reader.GetOrdinal("LargeImageData");
            this._ordinal2NodeType = reader.GetOrdinal("NodeType");
            this._initialized2 = true;
        }
        protected override void BindListResultToItem(PresentationNodeView item, SqlDataReader reader)
        {
            InitializeBindListResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal2Id);
            item.State = (PresentationNodeState)reader.GetByte(this._ordinal2State);
            item.FileAs = reader.GetString(this._ordinal2FileAs);
            item.Key = reader.GetString(this._ordinal2Key);
            if(reader.IsDBNull(_ordinal2DefaultViewId)) item.DefaultViewId = null; else item.DefaultViewId = reader.GetInt32(this._ordinal2DefaultViewId);
            if(reader.IsDBNull(_ordinal2ViewControlTypeName)) item.ViewControlTypeName = null; else item.ViewControlTypeName = reader.GetString(this._ordinal2ViewControlTypeName);
            item.OrdinalPosition = reader.GetInt32(this._ordinal2OrdinalPosition);
            if(reader.IsDBNull(_ordinal2Parameter)) item.Parameter = null; else item.Parameter = reader.GetString(this._ordinal2Parameter);
            if(reader.IsDBNull(_ordinal2ParentId)) item.ParentId = null; else item.ParentId = reader.GetInt32(this._ordinal2ParentId);
            if(reader.IsDBNull(_ordinal2DocumentTypeId)) item.DocumentTypeId = null; else item.DocumentTypeId = reader.GetInt32(this._ordinal2DocumentTypeId);
            if(reader.IsDBNull(_ordinal2SmallImageData)) item.SmallImageData = null; else item.SmallImageData = reader.GetSqlBinary(this._ordinal2SmallImageData).Value;
            if(reader.IsDBNull(_ordinal2LargeImageData)) item.LargeImageData = null; else item.LargeImageData = reader.GetSqlBinary(this._ordinal2LargeImageData).Value;
            item.NodeType = reader.GetInt32(this._ordinal2NodeType);
        }
    }
}
