//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    
    public partial class ProjectDataAdapter : XmlDataAdapterBase<ProjectView, Project, ProjectFilter>
    {
        private bool _initialized1;
        private int _ordinal1Id;
        private int _ordinal1State;
        private int _ordinal1Code;
        private int _ordinal1FileAs;
        private int _ordinal1ProjectTypeId;
        private int _ordinal1OpportunityId;
        private int _ordinal1OrganizationId;
        private int _ordinal1ProjectManagerId;
        private int _ordinal1ServiceRequestId;
        private int _ordinal1AccountId;
        private int _ordinal1ResponsibleContactId;
        private int _ordinal1ContractId;
        private int _ordinal1StartDate;
        private int _ordinal1EndDate;
        private int _ordinal1Comments;
        private int _ordinal1Created;
        private int _ordinal1CreatedBy;
        private int _ordinal1Modified;
        private int _ordinal1ModifiedBy;
        private int _ordinal1RowVersion;
        private void InitializeBindBrowseResultToItem(SqlDataReader reader)
        {
            if (this._initialized1) return;
            this._ordinal1Id = reader.GetOrdinal("Id");
            this._ordinal1State = reader.GetOrdinal("State");
            this._ordinal1Code = reader.GetOrdinal("Code");
            this._ordinal1FileAs = reader.GetOrdinal("FileAs");
            this._ordinal1ProjectTypeId = reader.GetOrdinal("ProjectTypeId");
            this._ordinal1OpportunityId = reader.GetOrdinal("OpportunityId");
            this._ordinal1OrganizationId = reader.GetOrdinal("OrganizationId");
            this._ordinal1ProjectManagerId = reader.GetOrdinal("ProjectManagerId");
            this._ordinal1ServiceRequestId = reader.GetOrdinal("ServiceRequestId");
            this._ordinal1AccountId = reader.GetOrdinal("AccountId");
            this._ordinal1ResponsibleContactId = reader.GetOrdinal("ResponsibleContactId");
            this._ordinal1ContractId = reader.GetOrdinal("ContractId");
            this._ordinal1StartDate = reader.GetOrdinal("StartDate");
            this._ordinal1EndDate = reader.GetOrdinal("EndDate");
            this._ordinal1Comments = reader.GetOrdinal("Comments");
            this._ordinal1Created = reader.GetOrdinal("Created");
            this._ordinal1CreatedBy = reader.GetOrdinal("CreatedBy");
            this._ordinal1Modified = reader.GetOrdinal("Modified");
            this._ordinal1ModifiedBy = reader.GetOrdinal("ModifiedBy");
            this._ordinal1RowVersion = reader.GetOrdinal("RowVersion");
            this._initialized1 = true;
        }
        protected override void BindBrowseResultToItem(ProjectView item, SqlDataReader reader)
        {
            InitializeBindBrowseResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal1Id);
            item.State = (ProjectState)reader.GetByte(this._ordinal1State);
            item.Code = reader.GetString(this._ordinal1Code);
            item.FileAs = reader.GetString(this._ordinal1FileAs);
            item.ProjectTypeId = reader.GetInt32(this._ordinal1ProjectTypeId);
            if(reader.IsDBNull(_ordinal1OpportunityId)) item.OpportunityId = null; else item.OpportunityId = reader.GetInt32(this._ordinal1OpportunityId);
            item.OrganizationId = reader.GetInt32(this._ordinal1OrganizationId);
            if(reader.IsDBNull(_ordinal1ProjectManagerId)) item.ProjectManagerId = null; else item.ProjectManagerId = reader.GetInt32(this._ordinal1ProjectManagerId);
            if(reader.IsDBNull(_ordinal1ServiceRequestId)) item.ServiceRequestId = null; else item.ServiceRequestId = reader.GetInt32(this._ordinal1ServiceRequestId);
            if(reader.IsDBNull(_ordinal1AccountId)) item.AccountId = null; else item.AccountId = reader.GetInt32(this._ordinal1AccountId);
            if(reader.IsDBNull(_ordinal1ResponsibleContactId)) item.ResponsibleContactId = null; else item.ResponsibleContactId = reader.GetInt32(this._ordinal1ResponsibleContactId);
            if(reader.IsDBNull(_ordinal1ContractId)) item.ContractId = null; else item.ContractId = reader.GetInt32(this._ordinal1ContractId);
            item.StartDate = reader.GetDateTime(this._ordinal1StartDate);
            item.EndDate = reader.GetDateTime(this._ordinal1EndDate);
            if(reader.IsDBNull(_ordinal1Comments)) item.Comments = null; else item.Comments = reader.GetString(this._ordinal1Comments);
            item.Created = reader.GetDateTime(this._ordinal1Created);
            item.CreatedBy = reader.GetInt32(this._ordinal1CreatedBy);
            item.Modified = reader.GetDateTime(this._ordinal1Modified);
            item.ModifiedBy = reader.GetInt32(this._ordinal1ModifiedBy);
            item.RowVersion = reader.GetSqlBinary(this._ordinal1RowVersion).Value;
        }
        private bool _initialized2;
        private int _ordinal2Id;
        private int _ordinal2State;
        private int _ordinal2Code;
        private int _ordinal2FileAs;
        private int _ordinal2ProjectTypeId;
        private int _ordinal2OpportunityId;
        private int _ordinal2OrganizationId;
        private int _ordinal2AccountId;
        private int _ordinal2ResponsibleContactId;
        private int _ordinal2ContractId;
        private int _ordinal2StartDate;
        private int _ordinal2EndDate;
        private void InitializeBindListResultToItem(SqlDataReader reader)
        {
            if (this._initialized2) return;
            this._ordinal2Id = reader.GetOrdinal("Id");
            this._ordinal2State = reader.GetOrdinal("State");
            this._ordinal2Code = reader.GetOrdinal("Code");
            this._ordinal2FileAs = reader.GetOrdinal("FileAs");
            this._ordinal2ProjectTypeId = reader.GetOrdinal("ProjectTypeId");
            this._ordinal2OpportunityId = reader.GetOrdinal("OpportunityId");
            this._ordinal2OrganizationId = reader.GetOrdinal("OrganizationId");
            this._ordinal2AccountId = reader.GetOrdinal("AccountId");
            this._ordinal2ResponsibleContactId = reader.GetOrdinal("ResponsibleContactId");
            this._ordinal2ContractId = reader.GetOrdinal("ContractId");
            this._ordinal2StartDate = reader.GetOrdinal("StartDate");
            this._ordinal2EndDate = reader.GetOrdinal("EndDate");
            this._initialized2 = true;
        }
        protected override void BindListResultToItem(ProjectView item, SqlDataReader reader)
        {
            InitializeBindListResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal2Id);
            item.State = (ProjectState)reader.GetByte(this._ordinal2State);
            item.Code = reader.GetString(this._ordinal2Code);
            item.FileAs = reader.GetString(this._ordinal2FileAs);
            item.ProjectTypeId = reader.GetInt32(this._ordinal2ProjectTypeId);
            if(reader.IsDBNull(_ordinal2OpportunityId)) item.OpportunityId = null; else item.OpportunityId = reader.GetInt32(this._ordinal2OpportunityId);
            item.OrganizationId = reader.GetInt32(this._ordinal2OrganizationId);
            if(reader.IsDBNull(_ordinal2AccountId)) item.AccountId = null; else item.AccountId = reader.GetInt32(this._ordinal2AccountId);
            if(reader.IsDBNull(_ordinal2ResponsibleContactId)) item.ResponsibleContactId = null; else item.ResponsibleContactId = reader.GetInt32(this._ordinal2ResponsibleContactId);
            if(reader.IsDBNull(_ordinal2ContractId)) item.ContractId = null; else item.ContractId = reader.GetInt32(this._ordinal2ContractId);
            item.StartDate = reader.GetDateTime(this._ordinal2StartDate);
            item.EndDate = reader.GetDateTime(this._ordinal2EndDate);
        }
    }
}
