//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    
    public partial class AccountEventDataAdapter : XmlDataAdapterBase<AccountEventView, AccountEvent, AccountEventFilter>
    {
        private bool _initialized1;
        private int _ordinal1Id;
        private int _ordinal1State;
        private int _ordinal1FileAs;
        private int _ordinal1AccountEventTypeId;
        private int _ordinal1AccountEventDirectionId;
        private int _ordinal1Importance;
        private int _ordinal1EventStart;
        private int _ordinal1EventEnd;
        private int _ordinal1AccountId;
        private int _ordinal1ContactId;
        private int _ordinal1ServiceRequestId;
        private int _ordinal1ServiceRequestNumber;
        private int _ordinal1EmployeeId;
        private int _ordinal1Comments;
        private int _ordinal1Created;
        private int _ordinal1CreatedBy;
        private int _ordinal1Modified;
        private int _ordinal1ModifiedBy;
        private int _ordinal1RowVersion;
        private void InitializeBindBrowseResultToItem(SqlDataReader reader)
        {
            if (this._initialized1) return;
            this._ordinal1Id = reader.GetOrdinal("Id");
            this._ordinal1State = reader.GetOrdinal("State");
            this._ordinal1FileAs = reader.GetOrdinal("FileAs");
            this._ordinal1AccountEventTypeId = reader.GetOrdinal("AccountEventTypeId");
            this._ordinal1AccountEventDirectionId = reader.GetOrdinal("AccountEventDirectionId");
            this._ordinal1Importance = reader.GetOrdinal("Importance");
            this._ordinal1EventStart = reader.GetOrdinal("EventStart");
            this._ordinal1EventEnd = reader.GetOrdinal("EventEnd");
            this._ordinal1AccountId = reader.GetOrdinal("AccountId");
            this._ordinal1ContactId = reader.GetOrdinal("ContactId");
            this._ordinal1ServiceRequestId = reader.GetOrdinal("ServiceRequestId");
            this._ordinal1ServiceRequestNumber = reader.GetOrdinal("ServiceRequestNumber");
            this._ordinal1EmployeeId = reader.GetOrdinal("EmployeeId");
            this._ordinal1Comments = reader.GetOrdinal("Comments");
            this._ordinal1Created = reader.GetOrdinal("Created");
            this._ordinal1CreatedBy = reader.GetOrdinal("CreatedBy");
            this._ordinal1Modified = reader.GetOrdinal("Modified");
            this._ordinal1ModifiedBy = reader.GetOrdinal("ModifiedBy");
            this._ordinal1RowVersion = reader.GetOrdinal("RowVersion");
            this._initialized1 = true;
        }
        protected override void BindBrowseResultToItem(AccountEventView item, SqlDataReader reader)
        {
            InitializeBindBrowseResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal1Id);
            item.State = (AccountEventState)reader.GetByte(this._ordinal1State);
            item.FileAs = reader.GetString(this._ordinal1FileAs);
            item.AccountEventTypeId = reader.GetInt32(this._ordinal1AccountEventTypeId);
            item.AccountEventDirectionId = reader.GetInt32(this._ordinal1AccountEventDirectionId);
            item.Importance = reader.GetInt32(this._ordinal1Importance);
            item.EventStart = reader.GetDateTime(this._ordinal1EventStart);
            item.EventEnd = reader.GetDateTime(this._ordinal1EventEnd);
            item.AccountId = reader.GetInt32(this._ordinal1AccountId);
            item.ContactId = reader.GetInt32(this._ordinal1ContactId);
            if(reader.IsDBNull(_ordinal1ServiceRequestId)) item.ServiceRequestId = null; else item.ServiceRequestId = reader.GetInt32(this._ordinal1ServiceRequestId);
            if(reader.IsDBNull(_ordinal1ServiceRequestNumber)) item.ServiceRequestNumber = null; else item.ServiceRequestNumber = reader.GetString(this._ordinal1ServiceRequestNumber);
            item.EmployeeId = reader.GetInt32(this._ordinal1EmployeeId);
            if(reader.IsDBNull(_ordinal1Comments)) item.Comments = null; else item.Comments = reader.GetString(this._ordinal1Comments);
            item.Created = reader.GetDateTime(this._ordinal1Created);
            item.CreatedBy = reader.GetInt32(this._ordinal1CreatedBy);
            item.Modified = reader.GetDateTime(this._ordinal1Modified);
            item.ModifiedBy = reader.GetInt32(this._ordinal1ModifiedBy);
            item.RowVersion = reader.GetSqlBinary(this._ordinal1RowVersion).Value;
        }
        private bool _initialized2;
        private int _ordinal2Id;
        private int _ordinal2State;
        private int _ordinal2FileAs;
        private int _ordinal2AccountEventTypeId;
        private int _ordinal2AccountEventDirectionId;
        private int _ordinal2Importance;
        private int _ordinal2EventStart;
        private int _ordinal2EventEnd;
        private int _ordinal2AccountId;
        private int _ordinal2ContactId;
        private int _ordinal2ServiceRequestId;
        private int _ordinal2EmployeeId;
        private void InitializeBindListResultToItem(SqlDataReader reader)
        {
            if (this._initialized2) return;
            this._ordinal2Id = reader.GetOrdinal("Id");
            this._ordinal2State = reader.GetOrdinal("State");
            this._ordinal2FileAs = reader.GetOrdinal("FileAs");
            this._ordinal2AccountEventTypeId = reader.GetOrdinal("AccountEventTypeId");
            this._ordinal2AccountEventDirectionId = reader.GetOrdinal("AccountEventDirectionId");
            this._ordinal2Importance = reader.GetOrdinal("Importance");
            this._ordinal2EventStart = reader.GetOrdinal("EventStart");
            this._ordinal2EventEnd = reader.GetOrdinal("EventEnd");
            this._ordinal2AccountId = reader.GetOrdinal("AccountId");
            this._ordinal2ContactId = reader.GetOrdinal("ContactId");
            this._ordinal2ServiceRequestId = reader.GetOrdinal("ServiceRequestId");
            this._ordinal2EmployeeId = reader.GetOrdinal("EmployeeId");
            this._initialized2 = true;
        }
        protected override void BindListResultToItem(AccountEventView item, SqlDataReader reader)
        {
            InitializeBindListResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal2Id);
            item.State = (AccountEventState)reader.GetByte(this._ordinal2State);
            item.FileAs = reader.GetString(this._ordinal2FileAs);
            item.AccountEventTypeId = reader.GetInt32(this._ordinal2AccountEventTypeId);
            item.AccountEventDirectionId = reader.GetInt32(this._ordinal2AccountEventDirectionId);
            item.Importance = reader.GetInt32(this._ordinal2Importance);
            item.EventStart = reader.GetDateTime(this._ordinal2EventStart);
            item.EventEnd = reader.GetDateTime(this._ordinal2EventEnd);
            item.AccountId = reader.GetInt32(this._ordinal2AccountId);
            item.ContactId = reader.GetInt32(this._ordinal2ContactId);
            if(reader.IsDBNull(_ordinal2ServiceRequestId)) item.ServiceRequestId = null; else item.ServiceRequestId = reader.GetInt32(this._ordinal2ServiceRequestId);
            item.EmployeeId = reader.GetInt32(this._ordinal2EmployeeId);
        }
    }
}
