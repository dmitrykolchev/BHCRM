//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    
    public partial class ContractDataAdapter : XmlDataAdapterBase<ContractView, Contract, ContractFilter>
    {
        private bool _initialized1;
        private int _ordinal1Id;
        private int _ordinal1State;
        private int _ordinal1FileAs;
        private int _ordinal1ParentContractId;
        private int _ordinal1Number;
        private int _ordinal1ContractDate;
        private int _ordinal1OrganizationId;
        private int _ordinal1AccountId;
        private int _ordinal1StartDate;
        private int _ordinal1EndDate;
        private int _ordinal1Amount;
        private int _ordinal1VAT;
        private int _ordinal1Comments;
        private int _ordinal1Created;
        private int _ordinal1CreatedBy;
        private int _ordinal1Modified;
        private int _ordinal1ModifiedBy;
        private int _ordinal1RowVersion;
        private void InitializeBindBrowseResultToItem(SqlDataReader reader)
        {
            if (this._initialized1) return;
            this._ordinal1Id = reader.GetOrdinal("Id");
            this._ordinal1State = reader.GetOrdinal("State");
            this._ordinal1FileAs = reader.GetOrdinal("FileAs");
            this._ordinal1ParentContractId = reader.GetOrdinal("ParentContractId");
            this._ordinal1Number = reader.GetOrdinal("Number");
            this._ordinal1ContractDate = reader.GetOrdinal("ContractDate");
            this._ordinal1OrganizationId = reader.GetOrdinal("OrganizationId");
            this._ordinal1AccountId = reader.GetOrdinal("AccountId");
            this._ordinal1StartDate = reader.GetOrdinal("StartDate");
            this._ordinal1EndDate = reader.GetOrdinal("EndDate");
            this._ordinal1Amount = reader.GetOrdinal("Amount");
            this._ordinal1VAT = reader.GetOrdinal("VAT");
            this._ordinal1Comments = reader.GetOrdinal("Comments");
            this._ordinal1Created = reader.GetOrdinal("Created");
            this._ordinal1CreatedBy = reader.GetOrdinal("CreatedBy");
            this._ordinal1Modified = reader.GetOrdinal("Modified");
            this._ordinal1ModifiedBy = reader.GetOrdinal("ModifiedBy");
            this._ordinal1RowVersion = reader.GetOrdinal("RowVersion");
            this._initialized1 = true;
        }
        protected override void BindBrowseResultToItem(ContractView item, SqlDataReader reader)
        {
            InitializeBindBrowseResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal1Id);
            item.State = (ContractState)reader.GetByte(this._ordinal1State);
            item.FileAs = reader.GetString(this._ordinal1FileAs);
            if(reader.IsDBNull(_ordinal1ParentContractId)) item.ParentContractId = null; else item.ParentContractId = reader.GetInt32(this._ordinal1ParentContractId);
            if(reader.IsDBNull(_ordinal1Number)) item.Number = null; else item.Number = reader.GetString(this._ordinal1Number);
            item.ContractDate = reader.GetDateTime(this._ordinal1ContractDate);
            item.OrganizationId = reader.GetInt32(this._ordinal1OrganizationId);
            item.AccountId = reader.GetInt32(this._ordinal1AccountId);
            if(reader.IsDBNull(_ordinal1StartDate)) item.StartDate = null; else item.StartDate = reader.GetDateTime(this._ordinal1StartDate);
            if(reader.IsDBNull(_ordinal1EndDate)) item.EndDate = null; else item.EndDate = reader.GetDateTime(this._ordinal1EndDate);
            item.Amount = reader.GetDecimal(this._ordinal1Amount);
            item.VAT = reader.GetDecimal(this._ordinal1VAT);
            if(reader.IsDBNull(_ordinal1Comments)) item.Comments = null; else item.Comments = reader.GetString(this._ordinal1Comments);
            item.Created = reader.GetDateTime(this._ordinal1Created);
            item.CreatedBy = reader.GetInt32(this._ordinal1CreatedBy);
            item.Modified = reader.GetDateTime(this._ordinal1Modified);
            item.ModifiedBy = reader.GetInt32(this._ordinal1ModifiedBy);
            item.RowVersion = reader.GetSqlBinary(this._ordinal1RowVersion).Value;
        }
        private bool _initialized2;
        private int _ordinal2Id;
        private int _ordinal2State;
        private int _ordinal2FileAs;
        private int _ordinal2ParentContractId;
        private int _ordinal2Number;
        private int _ordinal2ContractDate;
        private int _ordinal2OrganizationId;
        private int _ordinal2AccountId;
        private int _ordinal2StartDate;
        private int _ordinal2EndDate;
        private int _ordinal2Amount;
        private int _ordinal2VAT;
        private void InitializeBindListResultToItem(SqlDataReader reader)
        {
            if (this._initialized2) return;
            this._ordinal2Id = reader.GetOrdinal("Id");
            this._ordinal2State = reader.GetOrdinal("State");
            this._ordinal2FileAs = reader.GetOrdinal("FileAs");
            this._ordinal2ParentContractId = reader.GetOrdinal("ParentContractId");
            this._ordinal2Number = reader.GetOrdinal("Number");
            this._ordinal2ContractDate = reader.GetOrdinal("ContractDate");
            this._ordinal2OrganizationId = reader.GetOrdinal("OrganizationId");
            this._ordinal2AccountId = reader.GetOrdinal("AccountId");
            this._ordinal2StartDate = reader.GetOrdinal("StartDate");
            this._ordinal2EndDate = reader.GetOrdinal("EndDate");
            this._ordinal2Amount = reader.GetOrdinal("Amount");
            this._ordinal2VAT = reader.GetOrdinal("VAT");
            this._initialized2 = true;
        }
        protected override void BindListResultToItem(ContractView item, SqlDataReader reader)
        {
            InitializeBindListResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal2Id);
            item.State = (ContractState)reader.GetByte(this._ordinal2State);
            item.FileAs = reader.GetString(this._ordinal2FileAs);
            if(reader.IsDBNull(_ordinal2ParentContractId)) item.ParentContractId = null; else item.ParentContractId = reader.GetInt32(this._ordinal2ParentContractId);
            if(reader.IsDBNull(_ordinal2Number)) item.Number = null; else item.Number = reader.GetString(this._ordinal2Number);
            item.ContractDate = reader.GetDateTime(this._ordinal2ContractDate);
            item.OrganizationId = reader.GetInt32(this._ordinal2OrganizationId);
            item.AccountId = reader.GetInt32(this._ordinal2AccountId);
            if(reader.IsDBNull(_ordinal2StartDate)) item.StartDate = null; else item.StartDate = reader.GetDateTime(this._ordinal2StartDate);
            if(reader.IsDBNull(_ordinal2EndDate)) item.EndDate = null; else item.EndDate = reader.GetDateTime(this._ordinal2EndDate);
            item.Amount = reader.GetDecimal(this._ordinal2Amount);
            item.VAT = reader.GetDecimal(this._ordinal2VAT);
        }
    }
}
