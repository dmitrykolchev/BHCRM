//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    
    public partial class ProjectTaskDataAdapter : XmlDataAdapterBase<ProjectTaskView, ProjectTask, ProjectTaskFilter>
    {
        private bool _initialized1;
        private int _ordinal1Id;
        private int _ordinal1State;
        private int _ordinal1TaskNo;
        private int _ordinal1FileAs;
        private int _ordinal1ProjectId;
        private int _ordinal1ServiceRequestNumber;
        private int _ordinal1ServiceRequestAccountId;
        private int _ordinal1ProjectMemberRoleId;
        private int _ordinal1AssignedToEmployeeId;
        private int _ordinal1ProjectTaskStatusId;
        private int _ordinal1ProjectTaskStatus;
        private int _ordinal1Color;
        private int _ordinal1IsMilestone;
        private int _ordinal1TaskStart;
        private int _ordinal1TaskFinish;
        private int _ordinal1Importance;
        private int _ordinal1Complete;
        private int _ordinal1Comments;
        private int _ordinal1Created;
        private int _ordinal1CreatedBy;
        private int _ordinal1Modified;
        private int _ordinal1ModifiedBy;
        private int _ordinal1RowVersion;
        private void InitializeBindBrowseResultToItem(SqlDataReader reader)
        {
            if (this._initialized1) return;
            this._ordinal1Id = reader.GetOrdinal("Id");
            this._ordinal1State = reader.GetOrdinal("State");
            this._ordinal1TaskNo = reader.GetOrdinal("TaskNo");
            this._ordinal1FileAs = reader.GetOrdinal("FileAs");
            this._ordinal1ProjectId = reader.GetOrdinal("ProjectId");
            this._ordinal1ServiceRequestNumber = reader.GetOrdinal("ServiceRequestNumber");
            this._ordinal1ServiceRequestAccountId = reader.GetOrdinal("ServiceRequestAccountId");
            this._ordinal1ProjectMemberRoleId = reader.GetOrdinal("ProjectMemberRoleId");
            this._ordinal1AssignedToEmployeeId = reader.GetOrdinal("AssignedToEmployeeId");
            this._ordinal1ProjectTaskStatusId = reader.GetOrdinal("ProjectTaskStatusId");
            this._ordinal1ProjectTaskStatus = reader.GetOrdinal("ProjectTaskStatus");
            this._ordinal1Color = reader.GetOrdinal("Color");
            this._ordinal1IsMilestone = reader.GetOrdinal("IsMilestone");
            this._ordinal1TaskStart = reader.GetOrdinal("TaskStart");
            this._ordinal1TaskFinish = reader.GetOrdinal("TaskFinish");
            this._ordinal1Importance = reader.GetOrdinal("Importance");
            this._ordinal1Complete = reader.GetOrdinal("Complete");
            this._ordinal1Comments = reader.GetOrdinal("Comments");
            this._ordinal1Created = reader.GetOrdinal("Created");
            this._ordinal1CreatedBy = reader.GetOrdinal("CreatedBy");
            this._ordinal1Modified = reader.GetOrdinal("Modified");
            this._ordinal1ModifiedBy = reader.GetOrdinal("ModifiedBy");
            this._ordinal1RowVersion = reader.GetOrdinal("RowVersion");
            this._initialized1 = true;
        }
        protected override void BindBrowseResultToItem(ProjectTaskView item, SqlDataReader reader)
        {
            InitializeBindBrowseResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal1Id);
            item.State = (ProjectTaskState)reader.GetByte(this._ordinal1State);
            item.TaskNo = reader.GetInt32(this._ordinal1TaskNo);
            item.FileAs = reader.GetString(this._ordinal1FileAs);
            item.ProjectId = reader.GetInt32(this._ordinal1ProjectId);
            if(reader.IsDBNull(_ordinal1ServiceRequestNumber)) item.ServiceRequestNumber = null; else item.ServiceRequestNumber = reader.GetString(this._ordinal1ServiceRequestNumber);
            if(reader.IsDBNull(_ordinal1ServiceRequestAccountId)) item.ServiceRequestAccountId = null; else item.ServiceRequestAccountId = reader.GetInt32(this._ordinal1ServiceRequestAccountId);
            if(reader.IsDBNull(_ordinal1ProjectMemberRoleId)) item.ProjectMemberRoleId = null; else item.ProjectMemberRoleId = reader.GetInt32(this._ordinal1ProjectMemberRoleId);
            if(reader.IsDBNull(_ordinal1AssignedToEmployeeId)) item.AssignedToEmployeeId = null; else item.AssignedToEmployeeId = reader.GetInt32(this._ordinal1AssignedToEmployeeId);
            if(reader.IsDBNull(_ordinal1ProjectTaskStatusId)) item.ProjectTaskStatusId = null; else item.ProjectTaskStatusId = reader.GetInt32(this._ordinal1ProjectTaskStatusId);
            if(reader.IsDBNull(_ordinal1ProjectTaskStatus)) item.ProjectTaskStatus = null; else item.ProjectTaskStatus = reader.GetString(this._ordinal1ProjectTaskStatus);
            if(reader.IsDBNull(_ordinal1Color)) item.Color = null; else item.Color = reader.GetInt32(this._ordinal1Color);
            item.IsMilestone = reader.GetBoolean(this._ordinal1IsMilestone);
            item.TaskStart = reader.GetDateTime(this._ordinal1TaskStart);
            item.TaskFinish = reader.GetDateTime(this._ordinal1TaskFinish);
            item.Importance = reader.GetInt32(this._ordinal1Importance);
            item.Complete = reader.GetDecimal(this._ordinal1Complete);
            if(reader.IsDBNull(_ordinal1Comments)) item.Comments = null; else item.Comments = reader.GetString(this._ordinal1Comments);
            item.Created = reader.GetDateTime(this._ordinal1Created);
            item.CreatedBy = reader.GetInt32(this._ordinal1CreatedBy);
            item.Modified = reader.GetDateTime(this._ordinal1Modified);
            item.ModifiedBy = reader.GetInt32(this._ordinal1ModifiedBy);
            item.RowVersion = reader.GetSqlBinary(this._ordinal1RowVersion).Value;
        }
        private bool _initialized2;
        private int _ordinal2Id;
        private int _ordinal2State;
        private int _ordinal2TaskNo;
        private int _ordinal2FileAs;
        private int _ordinal2ProjectId;
        private int _ordinal2ProjectMemberRoleId;
        private int _ordinal2AssignedToEmployeeId;
        private int _ordinal2ProjectTaskStatusId;
        private int _ordinal2ProjectTaskStatus;
        private int _ordinal2IsMilestone;
        private int _ordinal2TaskStart;
        private int _ordinal2TaskFinish;
        private int _ordinal2Importance;
        private int _ordinal2Complete;
        private void InitializeBindListResultToItem(SqlDataReader reader)
        {
            if (this._initialized2) return;
            this._ordinal2Id = reader.GetOrdinal("Id");
            this._ordinal2State = reader.GetOrdinal("State");
            this._ordinal2TaskNo = reader.GetOrdinal("TaskNo");
            this._ordinal2FileAs = reader.GetOrdinal("FileAs");
            this._ordinal2ProjectId = reader.GetOrdinal("ProjectId");
            this._ordinal2ProjectMemberRoleId = reader.GetOrdinal("ProjectMemberRoleId");
            this._ordinal2AssignedToEmployeeId = reader.GetOrdinal("AssignedToEmployeeId");
            this._ordinal2ProjectTaskStatusId = reader.GetOrdinal("ProjectTaskStatusId");
            this._ordinal2ProjectTaskStatus = reader.GetOrdinal("ProjectTaskStatus");
            this._ordinal2IsMilestone = reader.GetOrdinal("IsMilestone");
            this._ordinal2TaskStart = reader.GetOrdinal("TaskStart");
            this._ordinal2TaskFinish = reader.GetOrdinal("TaskFinish");
            this._ordinal2Importance = reader.GetOrdinal("Importance");
            this._ordinal2Complete = reader.GetOrdinal("Complete");
            this._initialized2 = true;
        }
        protected override void BindListResultToItem(ProjectTaskView item, SqlDataReader reader)
        {
            InitializeBindListResultToItem(reader);
            item.Id = reader.GetInt32(this._ordinal2Id);
            item.State = (ProjectTaskState)reader.GetByte(this._ordinal2State);
            item.TaskNo = reader.GetInt32(this._ordinal2TaskNo);
            item.FileAs = reader.GetString(this._ordinal2FileAs);
            item.ProjectId = reader.GetInt32(this._ordinal2ProjectId);
            if(reader.IsDBNull(_ordinal2ProjectMemberRoleId)) item.ProjectMemberRoleId = null; else item.ProjectMemberRoleId = reader.GetInt32(this._ordinal2ProjectMemberRoleId);
            if(reader.IsDBNull(_ordinal2AssignedToEmployeeId)) item.AssignedToEmployeeId = null; else item.AssignedToEmployeeId = reader.GetInt32(this._ordinal2AssignedToEmployeeId);
            if(reader.IsDBNull(_ordinal2ProjectTaskStatusId)) item.ProjectTaskStatusId = null; else item.ProjectTaskStatusId = reader.GetInt32(this._ordinal2ProjectTaskStatusId);
            if(reader.IsDBNull(_ordinal2ProjectTaskStatus)) item.ProjectTaskStatus = null; else item.ProjectTaskStatus = reader.GetString(this._ordinal2ProjectTaskStatus);
            item.IsMilestone = reader.GetBoolean(this._ordinal2IsMilestone);
            item.TaskStart = reader.GetDateTime(this._ordinal2TaskStart);
            item.TaskFinish = reader.GetDateTime(this._ordinal2TaskFinish);
            item.Importance = reader.GetInt32(this._ordinal2Importance);
            item.Complete = reader.GetDecimal(this._ordinal2Complete);
        }
    }
}
