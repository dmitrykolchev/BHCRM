//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    public enum BankAccountState : byte
    {
        [XmlEnum("0")]
        NotExist = 0,
        [XmlEnum("1")]
        Active = 1,
        [XmlEnum("2")]
        Inactive = 2,
    }
    public partial class BankAccount : DataItem
    {
        public const string DataItemClassName = "BankAccount";
        public const string AccountIdProperty = "AccountId";
        public const string CashAccountProperty = "CashAccount";
        public const string BankProperty = "Bank";
        public const string AddressProperty = "Address";
        public const string AccountProperty = "Account";
        public const string SWIFTProperty = "SWIFT";
        public const string ABAProperty = "ABA";
        public const string BICProperty = "BIC";
        public const string IBANProperty = "IBAN";
        public const string IntermediaryBankProperty = "IntermediaryBank";
        public const string IntermediaryAddressProperty = "IntermediaryAddress";
        public const string IntermediaryAccountProperty = "IntermediaryAccount";
        public const string IntermediarySWIFTProperty = "IntermediarySWIFT";
        public const string IntermediaryABAProperty = "IntermediaryABA";
        private int _AccountIdField;
        private bool _CashAccountField;
        private string _BankField;
        private string _AddressField;
        private string _AccountField;
        private string _SWIFTField;
        private string _ABAField;
        private string _BICField;
        private string _IBANField;
        private string _IntermediaryBankField;
        private string _IntermediaryAddressField;
        private string _IntermediaryAccountField;
        private string _IntermediarySWIFTField;
        private string _IntermediaryABAField;
        public override string DataItemClass
        {
            get
            {
                return DataItemClassName;
            }
        }
        [XmlAttribute()]
        public BankAccountState State
        {
            get
            {
                return (BankAccountState)((IDataItem)this).State;
            }
            set
            {
                ((IDataItem)this).State = (byte)value;
            }
        }
        [Column(Name="AccountId", IsNullable=false)]
        [XmlAttribute()]
        public int AccountId
        {
            get
            {
                return this._AccountIdField;
            }
            set
            {
                this._AccountIdField = value;
                InvokePropertyChanged("AccountId");
            }
        }
        [Column(Name="CashAccount", IsNullable=false)]
        [XmlAttribute()]
        public bool CashAccount
        {
            get
            {
                return this._CashAccountField;
            }
            set
            {
                this._CashAccountField = value;
                InvokePropertyChanged("CashAccount");
            }
        }
        [Column(Name="Bank", IsNullable=true, MaximumLength=256)]
        [XmlAttribute()]
        public string Bank
        {
            get
            {
                return this._BankField;
            }
            set
            {
                this._BankField = value;
                InvokePropertyChanged("Bank");
            }
        }
        [Column(Name="Address", IsNullable=true, MaximumLength=256)]
        [XmlAttribute()]
        public string Address
        {
            get
            {
                return this._AddressField;
            }
            set
            {
                this._AddressField = value;
                InvokePropertyChanged("Address");
            }
        }
        [Column(Name="Account", IsNullable=true, MaximumLength=32)]
        [XmlAttribute()]
        public string Account
        {
            get
            {
                return this._AccountField;
            }
            set
            {
                this._AccountField = value;
                InvokePropertyChanged("Account");
            }
        }
        [Column(Name="SWIFT", IsNullable=true, MaximumLength=32)]
        [XmlAttribute()]
        public string SWIFT
        {
            get
            {
                return this._SWIFTField;
            }
            set
            {
                this._SWIFTField = value;
                InvokePropertyChanged("SWIFT");
            }
        }
        [Column(Name="ABA", IsNullable=true, MaximumLength=32)]
        [XmlAttribute()]
        public string ABA
        {
            get
            {
                return this._ABAField;
            }
            set
            {
                this._ABAField = value;
                InvokePropertyChanged("ABA");
            }
        }
        [Column(Name="BIC", IsNullable=true, MaximumLength=32)]
        [XmlAttribute()]
        public string BIC
        {
            get
            {
                return this._BICField;
            }
            set
            {
                this._BICField = value;
                InvokePropertyChanged("BIC");
            }
        }
        [Column(Name="IBAN", IsNullable=true, MaximumLength=32)]
        [XmlAttribute()]
        public string IBAN
        {
            get
            {
                return this._IBANField;
            }
            set
            {
                this._IBANField = value;
                InvokePropertyChanged("IBAN");
            }
        }
        [Column(Name="IntermediaryBank", IsNullable=true, MaximumLength=256)]
        [XmlAttribute()]
        public string IntermediaryBank
        {
            get
            {
                return this._IntermediaryBankField;
            }
            set
            {
                this._IntermediaryBankField = value;
                InvokePropertyChanged("IntermediaryBank");
            }
        }
        [Column(Name="IntermediaryAddress", IsNullable=true, MaximumLength=256)]
        [XmlAttribute()]
        public string IntermediaryAddress
        {
            get
            {
                return this._IntermediaryAddressField;
            }
            set
            {
                this._IntermediaryAddressField = value;
                InvokePropertyChanged("IntermediaryAddress");
            }
        }
        [Column(Name="IntermediaryAccount", IsNullable=true, MaximumLength=32)]
        [XmlAttribute()]
        public string IntermediaryAccount
        {
            get
            {
                return this._IntermediaryAccountField;
            }
            set
            {
                this._IntermediaryAccountField = value;
                InvokePropertyChanged("IntermediaryAccount");
            }
        }
        [Column(Name="IntermediarySWIFT", IsNullable=true, MaximumLength=32)]
        [XmlAttribute()]
        public string IntermediarySWIFT
        {
            get
            {
                return this._IntermediarySWIFTField;
            }
            set
            {
                this._IntermediarySWIFTField = value;
                InvokePropertyChanged("IntermediarySWIFT");
            }
        }
        [Column(Name="IntermediaryABA", IsNullable=true, MaximumLength=32)]
        [XmlAttribute()]
        public string IntermediaryABA
        {
            get
            {
                return this._IntermediaryABAField;
            }
            set
            {
                this._IntermediaryABAField = value;
                InvokePropertyChanged("IntermediaryABA");
            }
        }
        protected override void OnPropertyChanged(PropertyChangedEventArgs e)
        {
            NotifyPropertyChangedInternal(e.PropertyName);
            base.OnPropertyChanged(e);
        }

		partial void NotifyPropertyChangedInternal(string propertyName);
    }
}
