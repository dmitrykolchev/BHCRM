//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    public enum DataQueryState : byte
    {
        [XmlEnum("0")]
        NotExist = 0,
        [XmlEnum("1")]
        Active = 1,
    }
    public partial class DataQuery : DataItem
    {
        public const string DataItemClassName = "DataQuery";
        public const string DocumentElementProperty = "DocumentElement";
        public const string SelectorProperty = "Selector";
        public const string ValueProperty = "Value";
        public const string SchemaNameProperty = "SchemaName";
        public const string ProcedureNameProperty = "ProcedureName";
        private string _DocumentElementField;
        private string _SelectorField;
        private string _ValueField;
        private string _SchemaNameField;
        private string _ProcedureNameField;
        public override string DataItemClass
        {
            get
            {
                return DataItemClassName;
            }
        }
        [XmlAttribute()]
        public DataQueryState State
        {
            get
            {
                return (DataQueryState)((IDataItem)this).State;
            }
            set
            {
                ((IDataItem)this).State = (byte)value;
            }
        }
        [Column(Name="DocumentElement", IsNullable=false, MaximumLength=256)]
        [XmlAttribute()]
        public string DocumentElement
        {
            get
            {
                return this._DocumentElementField;
            }
            set
            {
                this._DocumentElementField = value;
                InvokePropertyChanged("DocumentElement");
            }
        }
        [Column(Name="Selector", IsNullable=true, MaximumLength=1024)]
        [XmlAttribute()]
        public string Selector
        {
            get
            {
                return this._SelectorField;
            }
            set
            {
                this._SelectorField = value;
                InvokePropertyChanged("Selector");
            }
        }
        [Column(Name="Value", IsNullable=true, MaximumLength=1024)]
        [XmlAttribute()]
        public string Value
        {
            get
            {
                return this._ValueField;
            }
            set
            {
                this._ValueField = value;
                InvokePropertyChanged("Value");
            }
        }
        [Column(Name="SchemaName", IsNullable=false, MaximumLength=128)]
        [XmlAttribute()]
        public string SchemaName
        {
            get
            {
                return this._SchemaNameField;
            }
            set
            {
                this._SchemaNameField = value;
                InvokePropertyChanged("SchemaName");
            }
        }
        [Column(Name="ProcedureName", IsNullable=false, MaximumLength=128)]
        [XmlAttribute()]
        public string ProcedureName
        {
            get
            {
                return this._ProcedureNameField;
            }
            set
            {
                this._ProcedureNameField = value;
                InvokePropertyChanged("ProcedureName");
            }
        }
        protected override void OnPropertyChanged(PropertyChangedEventArgs e)
        {
            NotifyPropertyChangedInternal(e.PropertyName);
            base.OnPropertyChanged(e);
        }

		partial void NotifyPropertyChangedInternal(string propertyName);
    }
}
