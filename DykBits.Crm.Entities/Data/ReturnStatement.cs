//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DykBits.Crm.Data
{
    using System;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    public enum ReturnStatementState : byte
    {
        [XmlEnum("0")]
        NotExist = 0,
        [XmlEnum("1")]
        Draft = 1,
        [XmlEnum("2")]
        Approved = 2,
    }
    public partial class ReturnStatement : NumberedDataItem
    {
        public const string DataItemClassName = "ReturnStatement";
        public const string StoragePlaceIdProperty = "StoragePlaceId";
        public const string SalesOrderIdProperty = "SalesOrderId";
        public const string TotalCostProperty = "TotalCost";
        public const string TotalPriceProperty = "TotalPrice";
        private int _StoragePlaceIdField;
        private int _SalesOrderIdField;
        private decimal _TotalCostField;
        private decimal _TotalPriceField;
        public override string DataItemClass
        {
            get
            {
                return DataItemClassName;
            }
        }
        [XmlAttribute()]
        public ReturnStatementState State
        {
            get
            {
                return (ReturnStatementState)((IDataItem)this).State;
            }
            set
            {
                ((IDataItem)this).State = (byte)value;
            }
        }
        [Column(Name="StoragePlaceId", IsNullable=false)]
        [XmlAttribute()]
        public int StoragePlaceId
        {
            get
            {
                return this._StoragePlaceIdField;
            }
            set
            {
                this._StoragePlaceIdField = value;
                InvokePropertyChanged("StoragePlaceId");
            }
        }
        [Column(Name="SalesOrderId", IsNullable=false)]
        [XmlAttribute()]
        public int SalesOrderId
        {
            get
            {
                return this._SalesOrderIdField;
            }
            set
            {
                this._SalesOrderIdField = value;
                InvokePropertyChanged("SalesOrderId");
            }
        }
        [Column(Name="TotalCost", IsNullable=false)]
        [XmlAttribute()]
        public decimal TotalCost
        {
            get
            {
                return this._TotalCostField;
            }
            set
            {
                this._TotalCostField = value;
                InvokePropertyChanged("TotalCost");
            }
        }
        [Column(Name="TotalPrice", IsNullable=false)]
        [XmlAttribute()]
        public decimal TotalPrice
        {
            get
            {
                return this._TotalPriceField;
            }
            set
            {
                this._TotalPriceField = value;
                InvokePropertyChanged("TotalPrice");
            }
        }
        protected override void OnPropertyChanged(PropertyChangedEventArgs e)
        {
            NotifyPropertyChangedInternal(e.PropertyName);
            base.OnPropertyChanged(e);
        }

		partial void NotifyPropertyChangedInternal(string propertyName);
    }
}
